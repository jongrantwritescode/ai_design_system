(self.webpackChunkai_design_system=self.webpackChunkai_design_system||[]).push([[361],{"./src/components/ds-checkbox.js":()=>{class DsCheckbox extends HTMLElement{constructor(){super();const shadowRoot=this.attachShadow({mode:"open"}),template=document.createElement("template");template.innerHTML='\n            <style>\n                @import url(\'/src/design_system/styles.css\');\n                \n                :host {\n                    display: inline-block;\n                }\n                \n                .wrapper {\n                    display: flex;\n                    align-items: center;\n                }\n            </style>\n            <div class="wrapper">\n                <input type="checkbox" id="checkbox" part="checkbox">\n                <slot></slot>\n            </div>\n        ',shadowRoot.appendChild(template.content.cloneNode(!0)),this.checkbox=shadowRoot.querySelector('input[type="checkbox"]'),this.setupEventListeners()}static get observedAttributes(){return["name","value","checked","disabled","readonly","required","id"]}attributeChangedCallback(name,oldValue,newValue){if(oldValue!==newValue)switch(name){case"name":this.checkbox.name=newValue||"";break;case"value":this.checkbox.value=newValue||"";break;case"checked":this.hasAttribute("checked")?this.checkbox.checked=!0:this.checkbox.checked=!1;break;case"disabled":this.hasAttribute("disabled")?this.checkbox.disabled=!0:this.checkbox.disabled=!1;break;case"readonly":this.hasAttribute("readonly")?this.checkbox.readOnly=!0:this.checkbox.readOnly=!1;break;case"required":this.hasAttribute("required")?this.checkbox.required=!0:this.checkbox.required=!1;break;case"id":this.checkbox.id=newValue||""}}setupEventListeners(){["change","focus","blur"].forEach(eventType=>{this.checkbox.addEventListener(eventType,event=>{const newEvent=new Event(eventType,{bubbles:!0,composed:!0,cancelable:!0});"change"===eventType&&(newEvent.target=this,newEvent.currentTarget=this),this.dispatchEvent(newEvent)})})}get checked(){return this.checkbox.checked}set checked(val){this.checkbox.checked=val}get value(){return this.checkbox.value}set value(val){this.checkbox.value=val}get name(){return this.checkbox.name}set name(val){this.checkbox.name=val}get disabled(){return this.checkbox.disabled}set disabled(val){this.checkbox.disabled=val}get readonly(){return this.checkbox.readOnly}set readonly(val){this.checkbox.readOnly=val}get required(){return this.checkbox.required}set required(val){this.checkbox.required=val}connectedCallback(){this.attributeChangedCallback("name",null,this.getAttribute("name")),this.attributeChangedCallback("value",null,this.getAttribute("value")),this.attributeChangedCallback("checked",null,this.getAttribute("checked")),this.attributeChangedCallback("disabled",null,this.getAttribute("disabled")),this.attributeChangedCallback("readonly",null,this.getAttribute("readonly")),this.attributeChangedCallback("required",null,this.getAttribute("required")),this.attributeChangedCallback("id",null,this.getAttribute("id"))}}customElements.define("ds-checkbox",DsCheckbox)},"./src/components/ds-fieldset.js":()=>{class DsFieldset extends HTMLElement{constructor(){super();const shadowRoot=this.attachShadow({mode:"open"}),template=document.createElement("template");template.innerHTML='\n            <style>\n                @import url(\'/src/design_system/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <fieldset part="fieldset">\n                    <slot></slot>\n                </fieldset>\n            </div>\n        ',shadowRoot.appendChild(template.content.cloneNode(!0)),this.fieldset=shadowRoot.querySelector("fieldset"),this.setupEventListeners()}static get observedAttributes(){return[]}setupEventListeners(){}connectedCallback(){}}customElements.define("ds-fieldset",DsFieldset)},"./src/components/ds-legend.js":()=>{class DsLegend extends HTMLElement{constructor(){super();const shadowRoot=this.attachShadow({mode:"open"}),template=document.createElement("template");template.innerHTML='\n            <style>\n                @import url(\'/src/design_system/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <legend part="legend">\n                    <slot></slot>\n                </legend>\n            </div>\n        ',shadowRoot.appendChild(template.content.cloneNode(!0)),this.legend=shadowRoot.querySelector("legend"),this.setupEventListeners()}static get observedAttributes(){return[]}setupEventListeners(){}connectedCallback(){}}customElements.define("ds-legend",DsLegend)},"./src/components/ds-radio.js":()=>{class DsRadio extends HTMLElement{constructor(){super();const shadowRoot=this.attachShadow({mode:"open"}),template=document.createElement("template");template.innerHTML='\n            <style>\n                @import url(\'/src/design_system/styles.css\');\n                \n                :host {\n                    display: inline-block;\n                }\n                \n                .wrapper {\n                    display: flex;\n                    align-items: center;\n                }\n            </style>\n            <div class="wrapper">\n                <input type="radio" id="radio" part="radio">\n                <slot></slot>\n            </div>\n        ',shadowRoot.appendChild(template.content.cloneNode(!0)),this.radio=shadowRoot.querySelector('input[type="radio"]'),this.setupEventListeners()}static get observedAttributes(){return["name","value","checked","disabled","readonly","required","id"]}attributeChangedCallback(name,oldValue,newValue){if(oldValue!==newValue)switch(name){case"name":this.radio.name=newValue||"";break;case"value":this.radio.value=newValue||"";break;case"checked":this.hasAttribute("checked")?this.radio.checked=!0:this.radio.checked=!1;break;case"disabled":this.hasAttribute("disabled")?this.radio.disabled=!0:this.radio.disabled=!1;break;case"readonly":this.hasAttribute("readonly")?this.radio.readOnly=!0:this.radio.readOnly=!1;break;case"required":this.hasAttribute("required")?this.radio.required=!0:this.radio.required=!1;break;case"id":this.radio.id=newValue||""}}setupEventListeners(){["change","focus","blur"].forEach(eventType=>{this.radio.addEventListener(eventType,event=>{const newEvent=new Event(eventType,{bubbles:!0,composed:!0,cancelable:!0});"change"===eventType&&(newEvent.target=this,newEvent.currentTarget=this),this.dispatchEvent(newEvent)})})}get checked(){return this.radio.checked}set checked(val){this.radio.checked=val}get value(){return this.radio.value}set value(val){this.radio.value=val}get name(){return this.radio.name}set name(val){this.radio.name=val}get disabled(){return this.radio.disabled}set disabled(val){this.radio.disabled=val}get readonly(){return this.radio.readOnly}set readonly(val){this.radio.readOnly=val}get required(){return this.radio.required}set required(val){this.radio.required=val}connectedCallback(){this.attributeChangedCallback("name",null,this.getAttribute("name")),this.attributeChangedCallback("value",null,this.getAttribute("value")),this.attributeChangedCallback("checked",null,this.getAttribute("checked")),this.attributeChangedCallback("disabled",null,this.getAttribute("disabled")),this.attributeChangedCallback("readonly",null,this.getAttribute("readonly")),this.attributeChangedCallback("required",null,this.getAttribute("required")),this.attributeChangedCallback("id",null,this.getAttribute("id"))}}customElements.define("ds-radio",DsRadio)},"./src/components/ds-text-input.js":()=>{class DsTextInput extends HTMLElement{constructor(){super();const shadowRoot=this.attachShadow({mode:"open"}),template=document.createElement("template");template.innerHTML='\n            <style>\n                @import url(\'/src/design_system/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <input id="input" part="input" type="text">\n                <slot></slot>\n            </div>\n        ',shadowRoot.appendChild(template.content.cloneNode(!0)),this.input=shadowRoot.querySelector("input"),this.setupEventListeners()}static get observedAttributes(){return["type","value","placeholder","disabled","readonly","required","name","id","aria-label"]}attributeChangedCallback(name,oldValue,newValue){if(oldValue!==newValue)switch(name){case"type":this.input.type=newValue||"text";break;case"value":this.input.value=newValue||"";break;case"placeholder":this.input.placeholder=newValue||"";break;case"disabled":this.hasAttribute("disabled")?this.input.disabled=!0:this.input.disabled=!1;break;case"readonly":this.hasAttribute("readonly")?this.input.readOnly=!0:this.input.readOnly=!1;break;case"required":this.hasAttribute("required")?this.input.required=!0:this.input.required=!1;break;case"name":this.input.name=newValue||"";break;case"id":this.input.id=newValue||"";break;case"aria-label":this.input.setAttribute("aria-label",newValue||"")}}setupEventListeners(){["input","change","focus","blur"].forEach(eventType=>{this.input.addEventListener(eventType,event=>{const newEvent=new Event(eventType,{bubbles:!0,composed:!0,cancelable:!0});"input"!==eventType&&"change"!==eventType||(newEvent.target=this,newEvent.currentTarget=this),this.dispatchEvent(newEvent)})})}get value(){return this.input.value}set value(val){this.input.value=val}get type(){return this.input.type}set type(val){this.input.type=val}get disabled(){return this.input.disabled}set disabled(val){this.input.disabled=val}get readonly(){return this.input.readOnly}set readonly(val){this.input.readOnly=val}get required(){return this.input.required}set required(val){this.input.required=val}connectedCallback(){this.attributeChangedCallback("type",null,this.getAttribute("type")),this.attributeChangedCallback("value",null,this.getAttribute("value")),this.attributeChangedCallback("placeholder",null,this.getAttribute("placeholder")),this.attributeChangedCallback("disabled",null,this.getAttribute("disabled")),this.attributeChangedCallback("readonly",null,this.getAttribute("readonly")),this.attributeChangedCallback("required",null,this.getAttribute("required")),this.attributeChangedCallback("name",null,this.getAttribute("name")),this.attributeChangedCallback("id",null,this.getAttribute("id")),this.attributeChangedCallback("aria-label",null,this.getAttribute("aria-label"))}}customElements.define("ds-text-input",DsTextInput)},"./src/stories/ds-fieldset.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithCheckboxes:()=>WithCheckboxes,WithFormControls:()=>WithFormControls,WithRadioButtons:()=>WithRadioButtons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./src/components/ds-fieldset.js"),__webpack_require__("./src/components/ds-legend.js"),__webpack_require__("./src/components/ds-text-input.js"),__webpack_require__("./src/components/ds-radio.js"),__webpack_require__("./src/components/ds-checkbox.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/ds-fieldset",component:"ds-fieldset",parameters:{docs:{description:{component:"A fieldset component that wraps native fieldset elements for grouping related form controls."}}},argTypes:{content:{control:"text",description:"The content inside the fieldset"}}},Default=(args=>{const element=document.createElement("ds-fieldset");return element.innerHTML=args.content||"<ds-legend>Fieldset Legend</ds-legend>",element}).bind({});Default.args={content:"<ds-legend>Personal Information</ds-legend>"};const WithFormControls=()=>{const fieldset=document.createElement("ds-fieldset"),legend=document.createElement("ds-legend");legend.innerHTML="Contact Information",fieldset.appendChild(legend);const nameInput=document.createElement("ds-text-input");nameInput.setAttribute("type","text"),nameInput.setAttribute("placeholder","Enter your name"),nameInput.setAttribute("name","name");const emailInput=document.createElement("ds-text-input");emailInput.setAttribute("type","email"),emailInput.setAttribute("placeholder","Enter your email"),emailInput.setAttribute("name","email");const container=document.createElement("div");return container.style.cssText="display: flex; flex-direction: column; gap: 16px;",container.appendChild(nameInput),container.appendChild(emailInput),fieldset.appendChild(container),fieldset},WithRadioButtons=()=>{const fieldset=document.createElement("ds-fieldset"),legend=document.createElement("ds-legend");legend.innerHTML="Select your preferred contact method",fieldset.appendChild(legend);const radio1=document.createElement("ds-radio");radio1.setAttribute("name","contact-method"),radio1.setAttribute("value","email"),radio1.innerHTML="Email";const radio2=document.createElement("ds-radio");radio2.setAttribute("name","contact-method"),radio2.setAttribute("value","phone"),radio2.setAttribute("checked",""),radio2.innerHTML="Phone";const radio3=document.createElement("ds-radio");radio3.setAttribute("name","contact-method"),radio3.setAttribute("value","mail"),radio3.innerHTML="Mail";const container=document.createElement("div");return container.style.cssText="display: flex; flex-direction: column; gap: 8px;",container.appendChild(radio1),container.appendChild(radio2),container.appendChild(radio3),fieldset.appendChild(container),fieldset},WithCheckboxes=()=>{const fieldset=document.createElement("ds-fieldset"),legend=document.createElement("ds-legend");legend.innerHTML="Select your interests",fieldset.appendChild(legend);const checkbox1=document.createElement("ds-checkbox");checkbox1.setAttribute("name","interests"),checkbox1.setAttribute("value","technology"),checkbox1.innerHTML="Technology";const checkbox2=document.createElement("ds-checkbox");checkbox2.setAttribute("name","interests"),checkbox2.setAttribute("value","sports"),checkbox2.setAttribute("checked",""),checkbox2.innerHTML="Sports";const checkbox3=document.createElement("ds-checkbox");checkbox3.setAttribute("name","interests"),checkbox3.setAttribute("value","music"),checkbox3.innerHTML="Music";const checkbox4=document.createElement("ds-checkbox");checkbox4.setAttribute("name","interests"),checkbox4.setAttribute("value","travel"),checkbox4.innerHTML="Travel";const container=document.createElement("div");return container.style.cssText="display: flex; flex-direction: column; gap: 8px;",container.appendChild(checkbox1),container.appendChild(checkbox2),container.appendChild(checkbox3),container.appendChild(checkbox4),fieldset.appendChild(container),fieldset},__namedExportsOrder=["Default","WithFormControls","WithRadioButtons","WithCheckboxes"]}}]);