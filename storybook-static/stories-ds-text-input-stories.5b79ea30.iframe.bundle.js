(self.webpackChunkai_design_system=self.webpackChunkai_design_system||[]).push([[323],{"./src/components/ds-text-input.js":()=>{class DsTextInput extends HTMLElement{constructor(){super();const shadowRoot=this.attachShadow({mode:"open"}),template=document.createElement("template");template.innerHTML='\n            <style>\n                @import url(\'/src/design_system/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <input id="input" part="input" type="text">\n                <slot></slot>\n            </div>\n        ',shadowRoot.appendChild(template.content.cloneNode(!0)),this.input=shadowRoot.querySelector("input"),this.setupEventListeners()}static get observedAttributes(){return["type","value","placeholder","disabled","readonly","required","name","id","aria-label"]}attributeChangedCallback(name,oldValue,newValue){if(oldValue!==newValue)switch(name){case"type":this.input.type=newValue||"text";break;case"value":this.input.value=newValue||"";break;case"placeholder":this.input.placeholder=newValue||"";break;case"disabled":this.hasAttribute("disabled")?this.input.disabled=!0:this.input.disabled=!1;break;case"readonly":this.hasAttribute("readonly")?this.input.readOnly=!0:this.input.readOnly=!1;break;case"required":this.hasAttribute("required")?this.input.required=!0:this.input.required=!1;break;case"name":this.input.name=newValue||"";break;case"id":this.input.id=newValue||"";break;case"aria-label":this.input.setAttribute("aria-label",newValue||"")}}setupEventListeners(){["input","change","focus","blur"].forEach(eventType=>{this.input.addEventListener(eventType,event=>{const newEvent=new Event(eventType,{bubbles:!0,composed:!0,cancelable:!0});"input"!==eventType&&"change"!==eventType||(newEvent.target=this,newEvent.currentTarget=this),this.dispatchEvent(newEvent)})})}get value(){return this.input.value}set value(val){this.input.value=val}get type(){return this.input.type}set type(val){this.input.type=val}get disabled(){return this.input.disabled}set disabled(val){this.input.disabled=val}get readonly(){return this.input.readOnly}set readonly(val){this.input.readOnly=val}get required(){return this.input.required}set required(val){this.input.required=val}connectedCallback(){this.attributeChangedCallback("type",null,this.getAttribute("type")),this.attributeChangedCallback("value",null,this.getAttribute("value")),this.attributeChangedCallback("placeholder",null,this.getAttribute("placeholder")),this.attributeChangedCallback("disabled",null,this.getAttribute("disabled")),this.attributeChangedCallback("readonly",null,this.getAttribute("readonly")),this.attributeChangedCallback("required",null,this.getAttribute("required")),this.attributeChangedCallback("name",null,this.getAttribute("name")),this.attributeChangedCallback("id",null,this.getAttribute("id")),this.attributeChangedCallback("aria-label",null,this.getAttribute("aria-label"))}}customElements.define("ds-text-input",DsTextInput)},"./src/stories/ds-text-input.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Email:()=>Email,Number:()=>Number,Password:()=>Password,Readonly:()=>Readonly,Required:()=>Required,WithValue:()=>WithValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./src/components/ds-text-input.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/ds-text-input",component:"ds-text-input",parameters:{docs:{description:{component:"A text input component that wraps native input elements with support for various input types."}}},argTypes:{type:{control:"select",options:["text","email","password","number","tel","url","search"],description:"The type of input field"},value:{control:"text",description:"The current value of the input"},placeholder:{control:"text",description:"Placeholder text for the input"},disabled:{control:"boolean",description:"Whether the input is disabled"},readonly:{control:"boolean",description:"Whether the input is read-only"},required:{control:"boolean",description:"Whether the input is required"},name:{control:"text",description:"The name attribute for form submission"},id:{control:"text",description:"The unique identifier for the input"},"aria-label":{control:"text",description:"Accessibility label for the input"}}},Template=args=>{const element=document.createElement("ds-text-input");return args.type&&element.setAttribute("type",args.type),args.value&&element.setAttribute("value",args.value),args.placeholder&&element.setAttribute("placeholder",args.placeholder),args.disabled&&element.setAttribute("disabled",""),args.readonly&&element.setAttribute("readonly",""),args.required&&element.setAttribute("required",""),args.name&&element.setAttribute("name",args.name),args.id&&element.setAttribute("id",args.id),args["aria-label"]&&element.setAttribute("aria-label",args["aria-label"]),element},Default=Template.bind({});Default.args={type:"text",placeholder:"Enter text here...",name:"text-input"};const Email=Template.bind({});Email.args={type:"email",placeholder:"Enter your email...",name:"email-input",required:!0};const Password=Template.bind({});Password.args={type:"password",placeholder:"Enter your password...",name:"password-input",required:!0};const Number=Template.bind({});Number.args={type:"number",placeholder:"Enter a number...",name:"number-input"};const Disabled=Template.bind({});Disabled.args={type:"text",value:"This input is disabled",disabled:!0,name:"disabled-input"};const Readonly=Template.bind({});Readonly.args={type:"text",value:"This input is read-only",readonly:!0,name:"readonly-input"};const WithValue=Template.bind({});WithValue.args={type:"text",value:"Pre-filled value",name:"value-input"};const Required=Template.bind({});Required.args={type:"text",placeholder:"This field is required...",required:!0,name:"required-input"};const __namedExportsOrder=["Default","Email","Password","Number","Disabled","Readonly","WithValue","Required"]}}]);