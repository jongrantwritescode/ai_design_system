(self.webpackChunkai_design_system=self.webpackChunkai_design_system||[]).push([[187],{"./src/components/ds-row.js":()=>{class DsRow extends HTMLElement{constructor(){super();const shadowRoot=this.attachShadow({mode:"open"}),template=document.createElement("template");template.innerHTML="\n            <style>\n                @import url('/src/design_system/styles.css');\n                \n                :host {\n                    display: block; /* Custom elements are inline by default */\n                }\n                \n                .row-container {\n                    display: flex;\n                    flex-direction: row;\n                    /* Default flex-wrap will be controlled by attribute */\n                }\n            </style>\n            <div class=\"row-container\">\n                <slot></slot>\n            </div>\n        ",shadowRoot.appendChild(template.content.cloneNode(!0)),this.rowContainer=shadowRoot.querySelector(".row-container")}static get observedAttributes(){return["justify-content","align-items","gap","wrap"]}attributeChangedCallback(name,oldValue,newValue){if(oldValue!==newValue)switch(name){case"justify-content":this.rowContainer.style.justifyContent=newValue||"";break;case"align-items":this.rowContainer.style.alignItems=newValue||"";break;case"gap":this.rowContainer.style.gap=newValue||"";break;case"wrap":this.hasAttribute("wrap")?this.rowContainer.style.flexWrap="wrap":this.rowContainer.style.flexWrap="nowrap"}}connectedCallback(){this.attributeChangedCallback("justify-content",null,this.getAttribute("justify-content")),this.attributeChangedCallback("align-items",null,this.getAttribute("align-items")),this.attributeChangedCallback("gap",null,this.getAttribute("gap")),this.attributeChangedCallback("wrap",null,this.getAttribute("wrap"))}}customElements.define("ds-row",DsRow)},"./src/stories/ds-row.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlignEnd:()=>AlignEnd,Centered:()=>Centered,Default:()=>Default,SpaceAround:()=>SpaceAround,SpaceBetween:()=>SpaceBetween,Wrapped:()=>Wrapped,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./src/components/ds-row.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/ds-row",component:"ds-row",parameters:{docs:{description:{component:"A Flexbox container for horizontal layouts with configurable alignment, spacing, and wrapping."}}},argTypes:{"justify-content":{control:"select",options:["flex-start","flex-end","center","space-between","space-around","space-evenly"],description:"Controls horizontal alignment of flex items"},"align-items":{control:"select",options:["flex-start","flex-end","center","baseline","stretch"],description:"Controls vertical alignment of flex items"},gap:{control:"text",description:"Spacing between flex items"},wrap:{control:"boolean",description:"Whether flex items should wrap to new lines"}}},Template=args=>{const element=document.createElement("ds-row");return args["justify-content"]&&element.setAttribute("justify-content",args["justify-content"]),args["align-items"]&&element.setAttribute("align-items",args["align-items"]),args.gap&&element.setAttribute("gap",args.gap),args.wrap&&element.setAttribute("wrap",""),element.innerHTML='\n    <div style="background: var(--ds-color-primary); color: white; padding: 8px; border-radius: 4px;">Item 1</div>\n    <div style="background: var(--ds-color-secondary); color: white; padding: 8px; border-radius: 4px;">Item 2</div>\n    <div style="background: var(--ds-color-primary); color: white; padding: 8px; border-radius: 4px;">Item 3</div>\n  ',element},Default=Template.bind({});Default.args={"justify-content":"flex-start","align-items":"stretch",gap:"16px",wrap:!1};const Centered=Template.bind({});Centered.args={"justify-content":"center","align-items":"center",gap:"24px",wrap:!1};const SpaceBetween=Template.bind({});SpaceBetween.args={"justify-content":"space-between","align-items":"center",gap:"16px",wrap:!1};const Wrapped=Template.bind({});Wrapped.args={"justify-content":"flex-start","align-items":"flex-start",gap:"12px",wrap:!0};const AlignEnd=Template.bind({});AlignEnd.args={"justify-content":"flex-end","align-items":"flex-end",gap:"16px",wrap:!1};const SpaceAround=Template.bind({});SpaceAround.args={"justify-content":"space-around","align-items":"center",gap:"20px",wrap:!1};const __namedExportsOrder=["Default","Centered","SpaceBetween","Wrapped","AlignEnd","SpaceAround"]}}]);