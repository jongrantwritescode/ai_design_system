(self.webpackChunkai_design_system=self.webpackChunkai_design_system||[]).push([[382],{"./src/components/ds-radio.js":()=>{class DsRadio extends HTMLElement{constructor(){super();const shadowRoot=this.attachShadow({mode:"open"}),template=document.createElement("template");template.innerHTML='\n            <style>\n                @import url(\'/src/design_system/styles.css\');\n                \n                :host {\n                    display: inline-block;\n                }\n                \n                .wrapper {\n                    display: flex;\n                    align-items: center;\n                }\n            </style>\n            <div class="wrapper">\n                <input type="radio" id="radio" part="radio">\n                <slot></slot>\n            </div>\n        ',shadowRoot.appendChild(template.content.cloneNode(!0)),this.radio=shadowRoot.querySelector('input[type="radio"]'),this.setupEventListeners()}static get observedAttributes(){return["name","value","checked","disabled","readonly","required","id"]}attributeChangedCallback(name,oldValue,newValue){if(oldValue!==newValue)switch(name){case"name":this.radio.name=newValue||"";break;case"value":this.radio.value=newValue||"";break;case"checked":this.hasAttribute("checked")?this.radio.checked=!0:this.radio.checked=!1;break;case"disabled":this.hasAttribute("disabled")?this.radio.disabled=!0:this.radio.disabled=!1;break;case"readonly":this.hasAttribute("readonly")?this.radio.readOnly=!0:this.radio.readOnly=!1;break;case"required":this.hasAttribute("required")?this.radio.required=!0:this.radio.required=!1;break;case"id":this.radio.id=newValue||""}}setupEventListeners(){["change","focus","blur"].forEach(eventType=>{this.radio.addEventListener(eventType,event=>{const newEvent=new Event(eventType,{bubbles:!0,composed:!0,cancelable:!0});"change"===eventType&&(newEvent.target=this,newEvent.currentTarget=this),this.dispatchEvent(newEvent)})})}get checked(){return this.radio.checked}set checked(val){this.radio.checked=val}get value(){return this.radio.value}set value(val){this.radio.value=val}get name(){return this.radio.name}set name(val){this.radio.name=val}get disabled(){return this.radio.disabled}set disabled(val){this.radio.disabled=val}get readonly(){return this.radio.readOnly}set readonly(val){this.radio.readOnly=val}get required(){return this.radio.required}set required(val){this.radio.required=val}connectedCallback(){this.attributeChangedCallback("name",null,this.getAttribute("name")),this.attributeChangedCallback("value",null,this.getAttribute("value")),this.attributeChangedCallback("checked",null,this.getAttribute("checked")),this.attributeChangedCallback("disabled",null,this.getAttribute("disabled")),this.attributeChangedCallback("readonly",null,this.getAttribute("readonly")),this.attributeChangedCallback("required",null,this.getAttribute("required")),this.attributeChangedCallback("id",null,this.getAttribute("id"))}}customElements.define("ds-radio",DsRadio)},"./src/stories/ds-radio.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checked:()=>Checked,Default:()=>Default,Disabled:()=>Disabled,RadioGroup:()=>RadioGroup,Required:()=>Required,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./src/components/ds-radio.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/ds-radio",component:"ds-radio",parameters:{docs:{description:{component:"A radio button component that wraps native radio input elements with support for radio groups."}}},argTypes:{name:{control:"text",description:"The name attribute for radio group association"},value:{control:"text",description:"The value of the radio button"},checked:{control:"boolean",description:"Whether the radio button is checked"},disabled:{control:"boolean",description:"Whether the radio button is disabled"},readonly:{control:"boolean",description:"Whether the radio button is read-only"},required:{control:"boolean",description:"Whether the radio button is required"},id:{control:"text",description:"The unique identifier for the radio button"},content:{control:"text",description:"The label text for the radio button"}}},Template=args=>{const element=document.createElement("ds-radio");return args.name&&element.setAttribute("name",args.name),args.value&&element.setAttribute("value",args.value),args.checked&&element.setAttribute("checked",""),args.disabled&&element.setAttribute("disabled",""),args.readonly&&element.setAttribute("readonly",""),args.required&&element.setAttribute("required",""),args.id&&element.setAttribute("id",args.id),element.innerHTML=args.content||"Radio Option",element},Default=Template.bind({});Default.args={name:"radio-group",value:"option1",content:"Option 1"};const Checked=Template.bind({});Checked.args={name:"radio-group",value:"option2",checked:!0,content:"Option 2 (Checked)"};const Disabled=Template.bind({});Disabled.args={name:"radio-group",value:"option3",disabled:!0,content:"Option 3 (Disabled)"};const Required=Template.bind({});Required.args={name:"radio-group",value:"option4",required:!0,content:"Option 4 (Required)"};const RadioGroup=()=>{const container=document.createElement("div");container.style.cssText="display: flex; flex-direction: column; gap: 8px;";const radio1=document.createElement("ds-radio");radio1.setAttribute("name","preferences"),radio1.setAttribute("value","light"),radio1.innerHTML="Light Theme";const radio2=document.createElement("ds-radio");radio2.setAttribute("name","preferences"),radio2.setAttribute("value","dark"),radio2.setAttribute("checked",""),radio2.innerHTML="Dark Theme";const radio3=document.createElement("ds-radio");return radio3.setAttribute("name","preferences"),radio3.setAttribute("value","auto"),radio3.innerHTML="Auto (System)",container.appendChild(radio1),container.appendChild(radio2),container.appendChild(radio3),container},__namedExportsOrder=["Default","Checked","Disabled","Required","RadioGroup"]}}]);