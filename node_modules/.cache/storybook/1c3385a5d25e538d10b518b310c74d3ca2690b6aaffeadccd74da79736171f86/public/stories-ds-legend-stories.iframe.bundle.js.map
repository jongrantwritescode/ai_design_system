{"version":3,"file":"stories-ds-legend-stories.iframe.bundle.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://ai-design-system/./src/components/ds-legend.js","webpack://ai-design-system/./src/stories/ds-legend.stories.js"],"sourcesContent":["/**\n * ds-legend - A legend component that wraps native legend elements\n * Used within ds-fieldset components\n */\nclass DsLegend extends HTMLElement {\n    constructor() {\n        super();\n        \n        // Attach shadow root with open mode for experimentation\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        \n        // Define the template with internal markup and styles\n        const template = document.createElement('template');\n        template.innerHTML = `\n            <style>\n                @import url('/src/design_system/styles.css');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class=\"wrapper\">\n                <legend part=\"legend\">\n                    <slot></slot>\n                </legend>\n            </div>\n        `;\n        \n        // Append the template's content to the shadow root\n        shadowRoot.appendChild(template.content.cloneNode(true));\n        \n        // Store reference to the internal legend for attribute changes\n        this.legend = shadowRoot.querySelector('legend');\n        \n        // Set up event listeners\n        this.setupEventListeners();\n    }\n    \n    /**\n     * Define which attributes should trigger attributeChangedCallback\n     */\n    static get observedAttributes() {\n        return []; // No specific attributes for legend\n    }\n    \n    /**\n     * Set up event listeners\n     */\n    setupEventListeners() {\n        // Legends don't typically have interactive events\n        // But we can listen for form-related events if needed\n    }\n    \n    /**\n     * Called when the element is connected to the DOM\n     * Apply any initial setup if needed\n     */\n    connectedCallback() {\n        // No specific initialization needed for legend\n        // It's designed to be a simple wrapper\n    }\n}\n\n// Register the custom element\ncustomElements.define('ds-legend', DsLegend); ","import '../components/ds-legend.js';\n\nexport default {\n  title: 'Components/ds-legend',\n  component: 'ds-legend',\n  parameters: {\n    docs: {\n      description: {\n        component: 'A legend component that wraps native legend elements, used within ds-fieldset components to provide a caption.'\n      }\n    }\n  },\n  argTypes: {\n    content: {\n      control: 'text',\n      description: 'The text content of the legend'\n    }\n  }\n};\n\nconst Template = (args) => {\n  const element = document.createElement('ds-legend');\n  \n  // Set content\n  element.innerHTML = args.content || 'Legend';\n  \n  return element;\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n  content: 'Form Section'\n};\n\nexport const LongText = Template.bind({});\nLongText.args = {\n  content: 'This is a very long legend that demonstrates how the component handles text wrapping and overflow'\n};\n\nexport const WithSpecialCharacters = Template.bind({});\nWithSpecialCharacters.args = {\n  content: 'Section 1: Personal Information *'\n};\n\nexport const Required = Template.bind({});\nRequired.args = {\n  content: 'Required Fields *'\n};\n\n// Legend in Context Example\nexport const InContext = () => {\n  const fieldset = document.createElement('fieldset');\n  fieldset.style.cssText = 'border: 1px solid #ccc; border-radius: 4px; padding: 16px; margin: 16px 0;';\n  \n  const legend = document.createElement('ds-legend');\n  legend.innerHTML = 'Contact Information';\n  fieldset.appendChild(legend);\n  \n  const content = document.createElement('div');\n  content.innerHTML = '<p>This shows how a legend appears within a fieldset context.</p>';\n  fieldset.appendChild(content);\n  \n  return fieldset;\n}; ;export const __namedExportsOrder = [\"Default\",\"LongText\",\"WithSpecialCharacters\",\"Required\",\"InContext\"];"],"names":[],"sourceRoot":""}