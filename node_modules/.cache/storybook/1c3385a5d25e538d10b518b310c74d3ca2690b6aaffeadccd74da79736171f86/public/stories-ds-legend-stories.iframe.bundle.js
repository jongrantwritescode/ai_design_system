(self["webpackChunkai_design_system"] = self["webpackChunkai_design_system"] || []).push([["stories-ds-legend-stories"],{

/***/ "./src/components/ds-legend.js":
/*!*************************************!*\
  !*** ./src/components/ds-legend.js ***!
  \*************************************/
/***/ (() => {

/**
 * ds-legend - A legend component that wraps native legend elements
 * Used within ds-fieldset components
 */
class DsLegend extends HTMLElement {
    constructor() {
        super();
        
        // Attach shadow root with open mode for experimentation
        const shadowRoot = this.attachShadow({ mode: 'open' });
        
        // Define the template with internal markup and styles
        const template = document.createElement('template');
        template.innerHTML = `
            <style>
                @import url('/src/design_system/styles.css');
                
                :host {
                    display: block;
                }
                
                .wrapper {
                    width: 100%;
                }
            </style>
            <div class="wrapper">
                <legend part="legend">
                    <slot></slot>
                </legend>
            </div>
        `;
        
        // Append the template's content to the shadow root
        shadowRoot.appendChild(template.content.cloneNode(true));
        
        // Store reference to the internal legend for attribute changes
        this.legend = shadowRoot.querySelector('legend');
        
        // Set up event listeners
        this.setupEventListeners();
    }
    
    /**
     * Define which attributes should trigger attributeChangedCallback
     */
    static get observedAttributes() {
        return []; // No specific attributes for legend
    }
    
    /**
     * Set up event listeners
     */
    setupEventListeners() {
        // Legends don't typically have interactive events
        // But we can listen for form-related events if needed
    }
    
    /**
     * Called when the element is connected to the DOM
     * Apply any initial setup if needed
     */
    connectedCallback() {
        // No specific initialization needed for legend
        // It's designed to be a simple wrapper
    }
}

// Register the custom element
customElements.define('ds-legend', DsLegend); 

/***/ }),

/***/ "./src/stories/ds-legend.stories.js":
/*!******************************************!*\
  !*** ./src/stories/ds-legend.stories.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   InContext: () => (/* binding */ InContext),
/* harmony export */   LongText: () => (/* binding */ LongText),
/* harmony export */   Required: () => (/* binding */ Required),
/* harmony export */   WithSpecialCharacters: () => (/* binding */ WithSpecialCharacters),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components_ds_legend_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/ds-legend.js */ "./src/components/ds-legend.js");
/* harmony import */ var _components_ds_legend_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_components_ds_legend_js__WEBPACK_IMPORTED_MODULE_0__);


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Components/ds-legend',
  component: 'ds-legend',
  parameters: {
    docs: {
      description: {
        component: 'A legend component that wraps native legend elements, used within ds-fieldset components to provide a caption.'
      }
    }
  },
  argTypes: {
    content: {
      control: 'text',
      description: 'The text content of the legend'
    }
  }
});

const Template = (args) => {
  const element = document.createElement('ds-legend');
  
  // Set content
  element.innerHTML = args.content || 'Legend';
  
  return element;
};

const Default = Template.bind({});
Default.args = {
  content: 'Form Section'
};

const LongText = Template.bind({});
LongText.args = {
  content: 'This is a very long legend that demonstrates how the component handles text wrapping and overflow'
};

const WithSpecialCharacters = Template.bind({});
WithSpecialCharacters.args = {
  content: 'Section 1: Personal Information *'
};

const Required = Template.bind({});
Required.args = {
  content: 'Required Fields *'
};

// Legend in Context Example
const InContext = () => {
  const fieldset = document.createElement('fieldset');
  fieldset.style.cssText = 'border: 1px solid #ccc; border-radius: 4px; padding: 16px; margin: 16px 0;';
  
  const legend = document.createElement('ds-legend');
  legend.innerHTML = 'Contact Information';
  fieldset.appendChild(legend);
  
  const content = document.createElement('div');
  content.innerHTML = '<p>This shows how a legend appears within a fieldset context.</p>';
  fieldset.appendChild(content);
  
  return fieldset;
}; ;const __namedExportsOrder = ["Default","LongText","WithSpecialCharacters","Required","InContext"];

/***/ })

}]);
//# sourceMappingURL=stories-ds-legend-stories.iframe.bundle.js.map