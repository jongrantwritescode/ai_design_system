"use strict";class e extends HTMLElement{constructor(e={}){super();const t=e.ariaConfig||{};this.ariaConfig={requiredAriaAttributes:t.requiredAriaAttributes||[],staticAriaAttributes:t.staticAriaAttributes||{},dynamicAriaAttributes:t.dynamicAriaAttributes||[],...t};const i=[...this.ariaConfig.dynamicAriaAttributes||[],...this.ariaConfig.requiredAriaAttributes||[]];this.options={display:e.display||"block",observedAttributes:Array.from(new Set([...e.observedAttributes||[],...i])),attributeHandlers:{...e.attributeHandlers||{}},events:e.events||[],targetSelector:e.targetSelector||null,template:e.template},this.addAriaAttributeHandlers(),this.setupShadowDOM(),this.setupARIA(),this.setupEventListeners()}setupShadowDOM(){const e=this.attachShadow({mode:"open"}),t=document.createElement("template");t.innerHTML=`\n            <style>\n                :host {\n                    display: ${this.options.display};\n                }\n            </style>\n            ${this.options.template||"<slot></slot>"}\n        `,e.appendChild(t.content.cloneNode(!0)),this.options.targetSelector&&(this.targetElement=e.querySelector(this.options.targetSelector))}setupEventListeners(){this.options.events.length&&this.targetElement&&this.options.events.forEach(e=>{this.targetElement.addEventListener(e,t=>{const i=new Event(e,{bubbles:!0,composed:!0,cancelable:!0});if("input"===e||"change"===e)try{Object.defineProperty(i,"target",{value:this,writable:!1}),Object.defineProperty(i,"currentTarget",{value:this,writable:!1})}catch(e){}this.dispatchEvent(i)})})}attributeChangedCallback(t,i,a){if(i===a)return;if((this.ariaConfig.dynamicAriaAttributes||[]).includes(t)||(this.ariaConfig.requiredAriaAttributes||[]).includes(t)){if(this.ariaConfig.staticAriaAttributes&&this.ariaConfig.staticAriaAttributes[t]){return void e.createAriaAttributeHandler(t).call(this,a)}e.createAriaAttributeHandler(t).call(this,a),this.validateAndWarnARIA(t,a)}const r=this.options.attributeHandlers[t];r&&r.call(this,a)}connectedCallback(){this.style.display=this.options.display,this.offsetHeight,this.options.observedAttributes.forEach(e=>{this.attributeChangedCallback(e,null,this.getAttribute(e))}),setTimeout(()=>{this.warnMissingARIA()},0)}static createBooleanHandler(e,t){return function(i){this.targetElement&&(this.targetElement[e]=this.hasAttribute(t))}}static createStringHandler(e,t=""){return function(i){this.targetElement&&(this.targetElement[e]=i||t)}}static createSetAttributeHandler(e){return function(t){this.targetElement&&(null===t?this.targetElement.removeAttribute(e):this.targetElement.setAttribute(e,t))}}createPropertyAccessor(e){return{get:()=>this.targetElement?.[e],set:t=>{this.targetElement&&(this.targetElement[e]=t)}}}setupARIA(){this.targetElement&&this.ariaConfig.staticAriaAttributes&&Object.entries(this.ariaConfig.staticAriaAttributes).forEach(([e,t])=>{this.targetElement.setAttribute(e,t)})}addAriaAttributeHandlers(){this.options.attributeHandlers||(this.options.attributeHandlers={});[...this.ariaConfig.dynamicAriaAttributes||[],...this.ariaConfig.requiredAriaAttributes||[]].forEach(t=>{this.options.attributeHandlers[t]||(this.options.attributeHandlers[t]=e.createAriaAttributeHandler(t))})}static createAriaAttributeHandler(e){return function(t){if(this.targetElement||(this.targetElement=this.shadowRoot?.querySelector(this.options.targetSelector)),this.targetElement){if(this.ariaConfig.staticAriaAttributes&&this.ariaConfig.staticAriaAttributes[e]){const i=this.ariaConfig.staticAriaAttributes[e];return void(null!==t&&t!==i&&console.warn(`[${this.constructor.name}] Cannot override static ARIA attribute '${e}' with value '${t}'. Static value '${i}' will be preserved.`))}null==t?this.targetElement.removeAttribute(e):this.targetElement.setAttribute(e,t)}}}static createAriaPropertyHandler(e){return{get(){return this.targetElement?.getAttribute(e)},set(t){this.targetElement&&(null==t?this.targetElement.removeAttribute(e):this.targetElement.setAttribute(e,t))}}}static createAriaStateHandler(e){return function(t){this.targetElement&&(null==t?this.targetElement.removeAttribute(e):this.targetElement.setAttribute(e,t))}}validateAriaTokens(e,t,i){return i.includes(t)?null:`Invalid value '${t}' for ${e}. Allowed: ${i.join(", ")}`}checkAriaReferences(e,t){if(!t)return null;const i=t.split(/\s+/);for(const t of i)if(!document.getElementById(t))return`Element referenced by ${e} ('${t}') does not exist in the document.`;return null}validateARIA(){const e=[];return(this.ariaConfig.requiredAriaAttributes||[]).forEach(t=>{this.hasAttribute(t)||this.targetElement?.hasAttribute(t)||e.push(`Missing required ARIA attribute: ${t}`)}),this.ariaConfig.tokenValidation&&Object.entries(this.ariaConfig.tokenValidation).forEach(([t,i])=>{const a=this.getAttribute(t)||this.targetElement?.getAttribute(t);a&&!i.includes(a)&&e.push(this.validateAriaTokens(t,a,i))}),(this.ariaConfig.referenceAttributes||[]).forEach(t=>{const i=this.getAttribute(t)||this.targetElement?.getAttribute(t),a=this.checkAriaReferences(t,i);a&&e.push(a)}),e}warnMissingARIA(){this.validateARIA().forEach(e=>{console.warn(`[${this.constructor.name}] ARIA validation: ${e}`)})}static get observedAttributes(){return["aria-label","aria-describedby","aria-pressed","aria-expanded","aria-haspopup","aria-controls","aria-current","aria-live","aria-atomic","aria-relevant","aria-busy","aria-dropeffect","aria-grabbed","aria-activedescendant","aria-colcount","aria-colindex","aria-colspan","aria-level","aria-multiline","aria-multiselectable","aria-orientation","aria-readonly","aria-required","aria-rowcount","aria-rowindex","aria-rowspan","aria-selected","aria-setsize","aria-sort","aria-valuemax","aria-valuemin","aria-valuenow","aria-valuetext"]}validateAndWarnARIA(e,t){const i=[];if(this.ariaConfig.tokenValidation&&this.ariaConfig.tokenValidation[e]){const a=this.ariaConfig.tokenValidation[e];t&&!a.includes(t)&&i.push(this.validateAriaTokens(e,t,a))}if((this.ariaConfig.referenceAttributes||[]).includes(e)){const a=this.checkAriaReferences(e,t);a&&i.push(a)}i.forEach(e=>{console.warn(`[${this.constructor.name}] ARIA validation: ${e}`)})}}class t extends e{constructor(){super();const e=document.createElement("template");e.innerHTML="\n            <style>\n                @import url('/src/styles/styles.css');\n                \n                :host {\n                    display: block; /* Custom elements are inline by default */\n                    width: 100%;\n                    min-height: 100vh; /* Ensures it takes full viewport height */\n                    box-sizing: border-box; /* Include padding/border in element's total width/height */\n                }\n                \n                .page-container {\n                    display: flex; /* Makes the main element a flex container for its children */\n                    flex-direction: column; /* Stacks children vertically by default */\n                    width: 100%;\n                    padding: var(--ds-spacing-page-padding, 20px); /* Default padding, can be overridden by CSS variable */\n                    margin: 0 auto; /* Center content if width is limited */\n                    max-width: var(--ds-page-max-width, 1200px); /* Optional max-width for content */\n                }\n            </style>\n            <main class=\"page-container\">\n                <slot></slot>\n            </main>\n        ",this.setupComponent(e,[]),this.pageContainer=this.shadowRoot.querySelector(".page-container")}}customElements.define("ds-page",t);class i extends e{constructor(){const e=document.createElement("template");e.innerHTML="\n            <style>\n                @import url('/src/styles/styles.css');\n                :host {\n                    display: block; /* Custom elements are inline by default */\n                }\n                .row-container {\n                    display: flex;\n                    flex-direction: row;\n                }\n            </style>\n            <div class=\"row-container\">\n                <slot></slot>\n            </div>\n        ",super({template:e.innerHTML,targetSelector:".row-container",ariaConfig:{staticAriaAttributes:{},dynamicAriaAttributes:["aria-label","aria-describedby"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"]},events:[],observedAttributes:["justify-content","align-items","gap","wrap"]}),this.rowContainer=this.shadowRoot.querySelector(".row-container")}static get observedAttributes(){return["justify-content","align-items","gap","wrap","aria-label","aria-describedby"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i)switch(e){case"justify-content":this.rowContainer.style.justifyContent=i||"";break;case"align-items":this.rowContainer.style.alignItems=i||"";break;case"gap":this.rowContainer.style.gap=i||"";break;case"wrap":this.hasAttribute("wrap")?this.rowContainer.style.flexWrap="wrap":this.rowContainer.style.flexWrap="nowrap"}}get ariaLabel(){const e=this.rowContainer.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.rowContainer.removeAttribute("aria-label"):this.rowContainer.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.rowContainer.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.rowContainer.removeAttribute("aria-describedby"):this.rowContainer.setAttribute("aria-describedby",e)}}customElements.define("ds-row",i);class a extends e{constructor(){const e=document.createElement("template");e.innerHTML="\n            <style>\n                @import url('/src/styles/styles.css');\n                :host {\n                    display: block; /* Custom elements are inline by default */\n                }\n                .col-container {\n                    display: flex; /* Make it a flex container for its own children */\n                    flex-direction: column;\n                }\n            </style>\n            <div class=\"col-container\">\n                <slot></slot>\n            </div>\n        ",super({template:e.innerHTML,targetSelector:".col-container",ariaConfig:{staticAriaAttributes:{},dynamicAriaAttributes:["aria-label","aria-describedby"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"]},events:[],observedAttributes:["flex-grow","flex-shrink","flex-basis","align-self","order","justify-content","align-items","gap","wrap","aria-label","aria-describedby"]}),this.colContainer=this.shadowRoot.querySelector(".col-container")}static get observedAttributes(){return["flex-grow","flex-shrink","flex-basis","align-self","order","justify-content","align-items","gap","wrap","aria-label","aria-describedby"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i)switch(e){case"flex-grow":this.style.flexGrow=i||"";break;case"flex-shrink":this.style.flexShrink=i||"";break;case"flex-basis":this.style.flexBasis=i||"";break;case"align-self":this.style.alignSelf=i||"";break;case"order":this.style.order=i||"";break;case"justify-content":this.colContainer.style.justifyContent=i||"";break;case"align-items":this.colContainer.style.alignItems=i||"";break;case"gap":this.colContainer.style.gap=i||"";break;case"wrap":this.hasAttribute("wrap")?this.colContainer.style.flexWrap="wrap":this.colContainer.style.flexWrap="nowrap"}}get ariaLabel(){const e=this.colContainer.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.colContainer.removeAttribute("aria-label"):this.colContainer.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.colContainer.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.colContainer.removeAttribute("aria-describedby"):this.colContainer.setAttribute("aria-describedby",e)}}customElements.define("ds-col",a);class r extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <input id="input" part="input" type="text">\n                <slot></slot>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:"input",ariaConfig:{staticAriaAttributes:{},dynamicAriaAttributes:["aria-label","aria-describedby","aria-required","aria-invalid","aria-autocomplete","aria-controls","aria-activedescendant"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby","aria-controls","aria-activedescendant"],tokenValidation:{"aria-autocomplete":["inline","list","both","none"],"aria-invalid":["grammar","false","spelling","true"]}},events:["input","change","focus","blur"],observedAttributes:["type","value","placeholder","disabled","readonly","required","name","id"]}),this.input=this.shadowRoot.querySelector("input")}static get observedAttributes(){return["type","value","placeholder","disabled","readonly","required","name","id","aria-label","aria-describedby","aria-required","aria-invalid","aria-autocomplete","aria-controls","aria-activedescendant"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i)switch(e){case"type":this.input.type=i||"text";break;case"value":this.input.value=i||"";break;case"placeholder":this.input.placeholder=i||"";break;case"disabled":this.input.disabled=this.hasAttribute("disabled");break;case"readonly":this.input.readOnly=this.hasAttribute("readonly");break;case"required":this.input.required=this.hasAttribute("required");break;case"name":this.input.name=i||"";break;case"id":this.input.id=i||""}}get value(){return this.input.value}set value(e){this.input.value=e}get type(){return this.input.type}set type(e){this.input.type=e}get disabled(){return this.input.disabled}set disabled(e){this.input.disabled=e}get readonly(){return this.input.readOnly}set readonly(e){this.input.readOnly=e}get required(){return this.input.required}set required(e){this.input.required=e}get ariaLabel(){const e=this.input.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.input.removeAttribute("aria-label"):this.input.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.input.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.input.removeAttribute("aria-describedby"):this.input.setAttribute("aria-describedby",e)}get ariaRequired(){const e=this.input.getAttribute("aria-required");return null===e?null:e}set ariaRequired(e){null==e?this.input.removeAttribute("aria-required"):this.input.setAttribute("aria-required",e)}get ariaInvalid(){const e=this.input.getAttribute("aria-invalid");return null===e?null:e}set ariaInvalid(e){null==e?this.input.removeAttribute("aria-invalid"):this.input.setAttribute("aria-invalid",e)}get ariaAutocomplete(){const e=this.input.getAttribute("aria-autocomplete");return null===e?null:e}set ariaAutocomplete(e){null==e?this.input.removeAttribute("aria-autocomplete"):this.input.setAttribute("aria-autocomplete",e)}get ariaControls(){const e=this.input.getAttribute("aria-controls");return null===e?null:e}set ariaControls(e){null==e?this.input.removeAttribute("aria-controls"):this.input.setAttribute("aria-controls",e)}get ariaActiveDescendant(){const e=this.input.getAttribute("aria-activedescendant");return null===e?null:e}set ariaActiveDescendant(e){null==e?this.input.removeAttribute("aria-activedescendant"):this.input.setAttribute("aria-activedescendant",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.getAttribute("aria-label"),i=this.getAttribute("aria-labelledby"),a=this.input.getAttribute("aria-label"),r=this.input.getAttribute("aria-labelledby");if(t||i||a||r||e.push("Text input has no accessible name (aria-label or aria-labelledby required)"),this.input.hasAttribute("aria-invalid")){const t=this.input.getAttribute("aria-invalid");["true","false","grammar","spelling"].includes(t)||e.push(`Invalid aria-invalid value: ${t}`)}if(this.input.hasAttribute("aria-describedby")){const t=this.checkAriaReferences("aria-describedby",this.input.getAttribute("aria-describedby"));t&&e.push(t)}return e}}customElements.define("ds-text-input",r);class s extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                :host { display: inline-block; }\n                .wrapper { width: 100%; }\n            </style>\n            <div class="wrapper">\n                <button part="button" type="button">\n                    <slot></slot>\n                </button>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:"button",ariaConfig:{staticAriaAttributes:{role:"button"},dynamicAriaAttributes:["aria-label","aria-describedby","aria-pressed","aria-expanded","aria-haspopup"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"],tokenValidation:{"aria-haspopup":["false","true","menu","listbox","tree","grid","dialog"],"aria-pressed":["false","true","mixed","undefined"],"aria-expanded":["false","true","undefined"]}},events:["click","focus","blur"],observedAttributes:["type","disabled","name","value","variant"]}),this.button=this.shadowRoot.querySelector("button")}static get observedAttributes(){return["type","disabled","name","value","variant","aria-label","aria-describedby","aria-pressed","aria-expanded","aria-haspopup"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i)switch(e){case"type":this.button.type=i||"button";break;case"disabled":this.hasAttribute("disabled")?this.button.disabled=!0:this.button.disabled=!1;break;case"name":this.button.name=i||"";break;case"value":this.button.value=i||"";break;case"variant":this.button.classList.remove("primary","secondary","danger"),i&&this.button.classList.add(i)}}get type(){return this.button.type}set type(e){this.button.type=e}get disabled(){return this.button.disabled}set disabled(e){this.button.disabled=e}get name(){return this.button.name}set name(e){this.button.name=e}get value(){return this.button.value}set value(e){this.button.value=e}get variant(){return this.getAttribute("variant")}set variant(e){e?this.setAttribute("variant",e):this.removeAttribute("variant")}get ariaLabel(){const e=this.button.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.button.removeAttribute("aria-label"):this.button.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.button.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.button.removeAttribute("aria-describedby"):this.button.setAttribute("aria-describedby",e)}get ariaPressed(){const e=this.button.getAttribute("aria-pressed");return null===e?null:e}set ariaPressed(e){null==e?this.button.removeAttribute("aria-pressed"):this.button.setAttribute("aria-pressed",e)}get ariaExpanded(){const e=this.button.getAttribute("aria-expanded");return null===e?null:e}set ariaExpanded(e){null==e?this.button.removeAttribute("aria-expanded"):this.button.setAttribute("aria-expanded",e)}get ariaHasPopup(){const e=this.button.getAttribute("aria-haspopup");return null===e?null:e}set ariaHasPopup(e){null==e?this.button.removeAttribute("aria-haspopup"):this.button.setAttribute("aria-haspopup",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.textContent.trim(),i=this.getAttribute("aria-label"),a=this.getAttribute("aria-labelledby"),r=this.button.getAttribute("aria-label"),s=this.button.getAttribute("aria-labelledby");if(t||i||a||r||s||e.push("Button has no accessible name (text, aria-label, or aria-labelledby required)"),this.button.hasAttribute("aria-pressed")){const t=this.button.getAttribute("aria-pressed");["true","false","mixed","undefined"].includes(t)||e.push(`Invalid aria-pressed value: ${t}`)}if(this.button.hasAttribute("aria-expanded"),this.button.hasAttribute("aria-describedby")){const t=this.checkAriaReferences("aria-describedby",this.button.getAttribute("aria-describedby"));t&&e.push(t)}return e}}customElements.define("ds-button",s);class n extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: inline-block;\n                }\n                \n                .wrapper {\n                    display: flex;\n                    align-items: center;\n                }\n            </style>\n            <div class="wrapper">\n                <input type="radio" id="radio" part="radio">\n                <slot></slot>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:'input[type="radio"]',ariaConfig:{staticAriaAttributes:{role:"radio"},dynamicAriaAttributes:["aria-label","aria-describedby","aria-required","aria-invalid","aria-checked"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"],tokenValidation:{"aria-checked":["true","false","mixed","undefined"],"aria-invalid":["true","false","grammar","spelling"]}},events:["change","focus","blur"],observedAttributes:["name","value","checked","disabled","readonly","required","id"]}),this.radio=this.shadowRoot.querySelector('input[type="radio"]')}static get observedAttributes(){return["name","value","checked","disabled","readonly","required","id","aria-label","aria-describedby","aria-required","aria-invalid","aria-checked"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i)switch(e){case"name":this.radio.name=i||"";break;case"value":this.radio.value=i||"";break;case"checked":this.hasAttribute("checked")?this.radio.checked=!0:this.radio.checked=!1;break;case"disabled":this.hasAttribute("disabled")?this.radio.disabled=!0:this.radio.disabled=!1;break;case"readonly":this.hasAttribute("readonly")?this.radio.readOnly=!0:this.radio.readOnly=!1;break;case"required":this.hasAttribute("required")?this.radio.required=!0:this.radio.required=!1;break;case"id":this.radio.id=i||""}}get checked(){return this.radio.checked}set checked(e){this.radio.checked=e}get value(){return this.radio.value}set value(e){this.radio.value=e}get name(){return this.radio.name}set name(e){this.radio.name=e}get disabled(){return this.radio.disabled}set disabled(e){this.radio.disabled=e}get readonly(){return this.radio.readOnly}set readonly(e){this.radio.readOnly=e}get required(){return this.radio.required}set required(e){this.radio.required=e}get ariaLabel(){const e=this.radio.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.radio.removeAttribute("aria-label"):this.radio.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.radio.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.radio.removeAttribute("aria-describedby"):this.radio.setAttribute("aria-describedby",e)}get ariaRequired(){const e=this.radio.getAttribute("aria-required");return null===e?null:e}set ariaRequired(e){null==e?this.radio.removeAttribute("aria-required"):this.radio.setAttribute("aria-required",e)}get ariaInvalid(){const e=this.radio.getAttribute("aria-invalid");return null===e?null:e}set ariaInvalid(e){null==e?this.radio.removeAttribute("aria-invalid"):this.radio.setAttribute("aria-invalid",e)}get ariaChecked(){const e=this.radio.getAttribute("aria-checked");return null===e?null:e}set ariaChecked(e){null==e?this.radio.removeAttribute("aria-checked"):this.radio.setAttribute("aria-checked",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.textContent.trim(),i=this.getAttribute("aria-label"),a=this.getAttribute("aria-labelledby"),r=this.radio.getAttribute("aria-label"),s=this.radio.getAttribute("aria-labelledby");if(t||i||a||r||s||e.push("Radio has no accessible name (text, aria-label, or aria-labelledby required)"),this.radio.hasAttribute("aria-checked")){const t=this.radio.getAttribute("aria-checked");["true","false","mixed","undefined"].includes(t)||e.push(`Invalid aria-checked value: ${t}`)}if(this.radio.hasAttribute("aria-describedby")){const t=this.checkAriaReferences("aria-describedby",this.radio.getAttribute("aria-describedby"));t&&e.push(t)}return e}}customElements.define("ds-radio",n);class l extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: inline-block;\n                }\n                \n                .wrapper {\n                    display: flex;\n                    align-items: center;\n                }\n            </style>\n            <div class="wrapper">\n                <input type="checkbox" id="checkbox" part="checkbox">\n                <slot></slot>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:'input[type="checkbox"]',ariaConfig:{staticAriaAttributes:{role:"checkbox"},dynamicAriaAttributes:["aria-label","aria-describedby","aria-required","aria-invalid","aria-checked"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"],tokenValidation:{"aria-checked":["true","false","mixed","undefined"],"aria-invalid":["true","false","grammar","spelling"]}},events:["change","focus","blur"],observedAttributes:["name","value","checked","disabled","readonly","required","id"]}),this.checkbox=this.shadowRoot.querySelector('input[type="checkbox"]')}static get observedAttributes(){return["name","value","checked","disabled","readonly","required","id","aria-label","aria-describedby","aria-required","aria-invalid","aria-checked"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i)switch(e){case"name":this.checkbox.name=i||"";break;case"value":this.checkbox.value=i||"";break;case"checked":this.hasAttribute("checked")?this.checkbox.checked=!0:this.checkbox.checked=!1;break;case"disabled":this.hasAttribute("disabled")?this.checkbox.disabled=!0:this.checkbox.disabled=!1;break;case"readonly":this.hasAttribute("readonly")?this.checkbox.readOnly=!0:this.checkbox.readOnly=!1;break;case"required":this.hasAttribute("required")?this.checkbox.required=!0:this.checkbox.required=!1;break;case"id":this.checkbox.id=i||""}}get checked(){return this.checkbox.checked}set checked(e){this.checkbox.checked=e}get value(){return this.checkbox.value}set value(e){this.checkbox.value=e}get name(){return this.checkbox.name}set name(e){this.checkbox.name=e}get disabled(){return this.checkbox.disabled}set disabled(e){this.checkbox.disabled=e}get readonly(){return this.checkbox.readOnly}set readonly(e){this.checkbox.readOnly=e}get required(){return this.checkbox.required}set required(e){this.checkbox.required=e}get ariaLabel(){const e=this.checkbox.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.checkbox.removeAttribute("aria-label"):this.checkbox.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.checkbox.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.checkbox.removeAttribute("aria-describedby"):this.checkbox.setAttribute("aria-describedby",e)}get ariaRequired(){const e=this.checkbox.getAttribute("aria-required");return null===e?null:e}set ariaRequired(e){null==e?this.checkbox.removeAttribute("aria-required"):this.checkbox.setAttribute("aria-required",e)}get ariaInvalid(){const e=this.checkbox.getAttribute("aria-invalid");return null===e?null:e}set ariaInvalid(e){null==e?this.checkbox.removeAttribute("aria-invalid"):this.checkbox.setAttribute("aria-invalid",e)}get ariaChecked(){const e=this.checkbox.getAttribute("aria-checked");return null===e?null:e}set ariaChecked(e){null==e?this.checkbox.removeAttribute("aria-checked"):this.checkbox.setAttribute("aria-checked",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.textContent.trim(),i=this.getAttribute("aria-label"),a=this.getAttribute("aria-labelledby"),r=this.checkbox.getAttribute("aria-label"),s=this.checkbox.getAttribute("aria-labelledby");if(t||i||a||r||s||e.push("Checkbox has no accessible name (text, aria-label, or aria-labelledby required)"),this.checkbox.hasAttribute("aria-checked")){const t=this.checkbox.getAttribute("aria-checked");["true","false","mixed","undefined"].includes(t)||e.push(`Invalid aria-checked value: ${t}`)}if(this.checkbox.hasAttribute("aria-describedby")){const t=this.checkAriaReferences("aria-describedby",this.checkbox.getAttribute("aria-describedby"));t&&e.push(t)}return e}}customElements.define("ds-checkbox",l);class o extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <textarea id="textarea" part="textarea">\n                    <slot></slot>\n                </textarea>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:"textarea",ariaConfig:{staticAriaAttributes:{},dynamicAriaAttributes:["aria-label","aria-describedby","aria-required","aria-invalid"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"],tokenValidation:{"aria-invalid":["grammar","false","spelling","true"]}},events:["input","change","focus","blur"],observedAttributes:["value","placeholder","rows","cols","disabled","readonly","required","name","id"]}),this.textarea=this.shadowRoot.querySelector("textarea")}static get observedAttributes(){return["value","placeholder","rows","cols","disabled","readonly","required","name","id","aria-label","aria-describedby","aria-required","aria-invalid"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i)switch(e){case"value":this.textarea.value=i||"";break;case"placeholder":this.textarea.placeholder=i||"";break;case"rows":this.textarea.rows=i||"";break;case"cols":this.textarea.cols=i||"";break;case"disabled":this.textarea.disabled=this.hasAttribute("disabled");break;case"readonly":this.textarea.readOnly=this.hasAttribute("readonly");break;case"required":this.textarea.required=this.hasAttribute("required");break;case"name":this.textarea.name=i||"";break;case"id":this.textarea.id=i||""}}get value(){return this.textarea.value}set value(e){this.textarea.value=e}get placeholder(){return this.textarea.placeholder}set placeholder(e){this.textarea.placeholder=e}get rows(){return this.textarea.rows}set rows(e){this.textarea.rows=e}get cols(){return this.textarea.cols}set cols(e){this.textarea.cols=e}get disabled(){return this.textarea.disabled}set disabled(e){this.textarea.disabled=e}get readonly(){return this.textarea.readOnly}set readonly(e){this.textarea.readOnly=e}get required(){return this.textarea.required}set required(e){this.textarea.required=e}get name(){return this.textarea.name}set name(e){this.textarea.name=e}get ariaLabel(){const e=this.textarea.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.textarea.removeAttribute("aria-label"):this.textarea.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.textarea.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.textarea.removeAttribute("aria-describedby"):this.textarea.setAttribute("aria-describedby",e)}get ariaRequired(){const e=this.textarea.getAttribute("aria-required");return null===e?null:e}set ariaRequired(e){null==e?this.textarea.removeAttribute("aria-required"):this.textarea.setAttribute("aria-required",e)}get ariaInvalid(){const e=this.textarea.getAttribute("aria-invalid");return null===e?null:e}set ariaInvalid(e){null==e?this.textarea.removeAttribute("aria-invalid"):this.textarea.setAttribute("aria-invalid",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.getAttribute("aria-label"),i=this.getAttribute("aria-labelledby"),a=this.textarea.getAttribute("aria-label"),r=this.textarea.getAttribute("aria-labelledby");if(t||i||a||r||e.push("Textarea has no accessible name (aria-label or aria-labelledby required)"),this.textarea.hasAttribute("aria-invalid")){const t=this.textarea.getAttribute("aria-invalid");["true","false","grammar","spelling"].includes(t)||e.push(`Invalid aria-invalid value: ${t}`)}if(this.textarea.hasAttribute("aria-describedby")){const t=this.checkAriaReferences("aria-describedby",this.textarea.getAttribute("aria-describedby"));t&&e.push(t)}return e}}customElements.define("ds-textarea",o);class d extends e{constructor(){super();const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <select id="select" part="select">\n                    <slot></slot>\n                </select>\n            </div>\n        ',this.setupComponent(e,["value","disabled","required","name","multiple","size"]),this.select=this.shadowRoot.querySelector("select"),this.setupEventListeners(),this.setupSlotListener()}attributeChangedCallback(e,t,i){if(t!==i)switch(e){case"value":this.select.value=i||"";break;case"disabled":this.hasAttribute("disabled")?this.select.disabled=!0:this.select.disabled=!1;break;case"required":this.hasAttribute("required")?this.select.required=!0:this.select.required=!1;break;case"name":this.select.name=i||"";break;case"multiple":this.hasAttribute("multiple")?this.select.multiple=!0:this.select.multiple=!1;break;case"size":this.select.size=i||""}}setupEventListeners(){["change","focus","blur"].forEach(e=>{this.select.addEventListener(e,t=>{const i=new Event(e,{bubbles:!0,composed:!0,cancelable:!0});"change"===e&&(i.target=this,i.currentTarget=this),this.dispatchEvent(i)})})}setupSlotListener(){this.shadowRoot.querySelector("slot").addEventListener("slotchange",()=>{this.handleSlotChange()})}handleSlotChange(){const e=this.shadowRoot.querySelector("slot").assignedNodes();this.select.innerHTML="",e.forEach(e=>{if(e.nodeType===Node.ELEMENT_NODE)if("DS-OPTION"===e.tagName){const t=document.createElement("option");e.hasAttribute("value")&&(t.value=e.getAttribute("value")),e.hasAttribute("disabled")&&(t.disabled=!0),e.hasAttribute("selected")&&(t.selected=!0),t.textContent=e.textContent||e.innerText||"",this.select.appendChild(t)}else"OPTION"===e.tagName&&this.select.appendChild(e.cloneNode(!0))})}get value(){return this.select.value}set value(e){this.select.value=e}get disabled(){return this.select.disabled}set disabled(e){this.select.disabled=e}get required(){return this.select.required}set required(e){this.select.required=e}get name(){return this.select.name}set name(e){this.select.name=e}get multiple(){return this.select.multiple}set multiple(e){this.select.multiple=e}get size(){return this.select.size}set size(e){this.select.size=e}}customElements.define("ds-select",d);class u extends e{constructor(){const e=document.createElement("template");e.innerHTML="\n            <style>\n                @import url('/src/styles/styles.css');\n                :host {\n                    display: none; /* Hidden by default, shown when slotted into select */\n                }\n            </style>\n            <div>\n                <option part=\"option\">\n                    <slot></slot>\n                </option>\n            </div>\n        ",super({template:e.innerHTML,targetSelector:"option",ariaConfig:{staticAriaAttributes:{},dynamicAriaAttributes:["aria-label","aria-describedby"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"]},events:[],observedAttributes:["value","disabled","selected"]}),this.option=this.shadowRoot.querySelector("option")}static get observedAttributes(){return["value","disabled","selected","aria-label","aria-describedby"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i)switch(e){case"value":this.option.value=i||"";break;case"disabled":this.option.disabled=this.hasAttribute("disabled");break;case"selected":this.option.selected=this.hasAttribute("selected")}}get value(){return this.option.value}set value(e){this.option.value=e}get selected(){return this.option.selected}set selected(e){this.option.selected=e}get disabled(){return this.option.disabled}set disabled(e){this.option.disabled=e}get ariaLabel(){const e=this.option.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.option.removeAttribute("aria-label"):this.option.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.option.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.option.removeAttribute("aria-describedby"):this.option.setAttribute("aria-describedby",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.textContent.trim(),i=this.option.getAttribute("aria-label");return t||i||e.push("Option has no accessible name (text or aria-label required)"),e}}customElements.define("ds-option",u);class c extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <label part="label">\n                    <slot></slot>\n                </label>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:"label",ariaConfig:{staticAriaAttributes:{},dynamicAriaAttributes:["aria-label","aria-describedby"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"]},events:["click"],observedAttributes:["for"]}),this.label=this.shadowRoot.querySelector("label")}static get observedAttributes(){return["for","aria-label","aria-describedby"]}attributeChangedCallback(e,t,i){if(super.attributeChangedCallback(e,t,i),t!==i&&"for"===e)this.label.setAttribute("for",i||"")}get htmlFor(){return this.label.htmlFor}set htmlFor(e){this.label.htmlFor=e}get ariaLabel(){const e=this.label.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.label.removeAttribute("aria-label"):this.label.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.label.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.label.removeAttribute("aria-describedby"):this.label.setAttribute("aria-describedby",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.label.getAttribute("for");t&&!document.getElementById(t)&&e.push(`Label 'for' attribute references missing element: ${t}`);const i=this.textContent.trim(),a=this.label.getAttribute("aria-label");return i||a||e.push("Label has no accessible name (text or aria-label required)"),e}}customElements.define("ds-label",c);class b extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <fieldset part="fieldset">\n                    <slot></slot>\n                </fieldset>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:"fieldset",ariaConfig:{staticAriaAttributes:{},dynamicAriaAttributes:["aria-label","aria-describedby"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"]},events:[],observedAttributes:[]}),this.fieldset=this.shadowRoot.querySelector("fieldset")}static get observedAttributes(){return["aria-label","aria-describedby"]}attributeChangedCallback(e,t,i){super.attributeChangedCallback(e,t,i)}get ariaLabel(){const e=this.fieldset.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.fieldset.removeAttribute("aria-label"):this.fieldset.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.fieldset.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.fieldset.removeAttribute("aria-describedby"):this.fieldset.setAttribute("aria-describedby",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.fieldset.querySelector("legend,ds-legend"),i=this.fieldset.getAttribute("aria-label");return t||i||e.push("Fieldset has no accessible name (legend or aria-label required)"),e}}customElements.define("ds-fieldset",b);class h extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .wrapper {\n                    width: 100%;\n                }\n            </style>\n            <div class="wrapper">\n                <legend part="legend">\n                    <slot></slot>\n                </legend>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:"legend",ariaConfig:{staticAriaAttributes:{},dynamicAriaAttributes:["aria-label","aria-describedby"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby"]},events:[],observedAttributes:[]}),this.legend=this.shadowRoot.querySelector("legend")}static get observedAttributes(){return["aria-label","aria-describedby"]}attributeChangedCallback(e,t,i){super.attributeChangedCallback(e,t,i)}get ariaLabel(){const e=this.legend.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.legend.removeAttribute("aria-label"):this.legend.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.legend.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.legend.removeAttribute("aria-describedby"):this.legend.setAttribute("aria-describedby",e)}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.textContent.trim(),i=this.legend.getAttribute("aria-label");return t||i||e.push("Legend has no accessible name (text or aria-label required)"),e}}customElements.define("ds-legend",h);class p extends e{constructor(){const e=document.createElement("template");e.innerHTML='\n            <style>\n                @import url(\'/src/styles/styles.css\');\n                \n                :host {\n                    display: block;\n                }\n                \n                .form-wrapper {\n                    width: 100%;\n                }\n                \n                form[part="form"] {\n                    width: 100%;\n                }\n                \n                .live-region[part="live-region"] {\n                    position: absolute;\n                    left: -10000px;\n                    width: 1px;\n                    height: 1px;\n                    overflow: hidden;\n                }\n                \n                .live-region[part="live-region"]:not([hidden]) {\n                    position: static;\n                    width: auto;\n                    height: auto;\n                    margin-top: var(--ds-spacing-sm);\n                    padding: var(--ds-spacing-sm);\n                    border-radius: var(--ds-form-border-radius);\n                    font-size: 0.9em;\n                }\n                \n                .live-region[part="live-region"][data-type="error"] {\n                    background-color: var(--ds-form-error-background);\n                    color: var(--ds-form-error-color);\n                    border: 1px solid var(--ds-form-error-border);\n                }\n                \n                .live-region[part="live-region"][data-type="success"] {\n                    background-color: var(--ds-form-success-background, #d4edda);\n                    color: var(--ds-form-success-color, #155724);\n                    border: 1px solid var(--ds-form-success-border, #c3e6cb);\n                }\n                \n                .live-region[part="live-region"][data-type="info"] {\n                    background-color: var(--ds-form-info-background, #d1ecf1);\n                    color: var(--ds-form-info-color, #0c5460);\n                    border: 1px solid var(--ds-form-info-border, #bee5eb);\n                }\n            </style>\n            <div class="form-wrapper">\n                <form part="form" novalidate>\n                    <slot></slot>\n                </form>\n                <div \n                    part="live-region" \n                    class="live-region"\n                    aria-live="polite" \n                    aria-atomic="true" \n                    hidden>\n                </div>\n            </div>\n        ',super({template:e.innerHTML,targetSelector:"form",ariaConfig:{staticAriaAttributes:{role:"form"},dynamicAriaAttributes:["aria-label","aria-describedby","aria-labelledby"],requiredAriaAttributes:[],referenceAttributes:["aria-describedby","aria-labelledby"]},events:["submit","reset","input","change","invalid"]}),this.form=this.shadowRoot.querySelector("form"),this.liveRegion=this.shadowRoot.querySelector('[part="live-region"]'),this.formState={submitted:!1,valid:!0,errors:new Map,hasValidationErrors:!1},this.setupFormHandlers()}static get observedAttributes(){return["action","method","enctype","target","novalidate","autocomplete","aria-label","aria-describedby","aria-labelledby"]}setupFormHandlers(){this.form.addEventListener("submit",e=>{this.handleFormSubmit(e)}),this.form.addEventListener("reset",e=>{this.handleFormReset(e)}),this.form.addEventListener("input",e=>{this.handleInputChange(e)}),this.form.addEventListener("invalid",e=>{this.handleInvalidEvent(e)}),this.form.addEventListener("change",e=>{this.handleFormChange(e)})}handleFormSubmit(e){this.formState.submitted=!0;const t=this.querySelectorAll("input, select, textarea, ds-text-input, ds-select, ds-textarea, ds-checkbox, ds-radio");let i=!1;if(t.forEach(e=>{if(e.hasAttribute("required")){(e.value||"").trim()||(i=!0,this.validateInput(e))}}),i)return e.preventDefault(),void this.handleValidationErrors();this.clearLiveRegion(),this.announceToScreenReader("Form submitted successfully")}handleFormReset(e){this.formState={submitted:!1,valid:!0,errors:new Map,hasValidationErrors:!1},this.clearLiveRegion(),this.announceToScreenReader("Form has been reset")}handleInputChange(e){const t=e.target;this.formState.errors.has(t)&&(this.formState.errors.delete(t),this.updateLiveRegion()),this.formState.submitted&&this.validateInput(t)}handleInvalidEvent(e){e.preventDefault(),this.validateInput(e.target)}handleFormChange(e){this.updateFormValidity()}validateInput(e){let t=!0,i="";if(e.checkValidity)t=e.checkValidity(),i=e.validationMessage||"This field is invalid";else if(e.tagName&&e.tagName.toLowerCase().includes("ds-")){const a=e.hasAttribute("required"),r=e.value||"";if(a&&!r.trim())t=!1,i="This field is required";else if("email"===e.type&&r){/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r)||(t=!1,i="Please enter a valid email address")}}t?this.formState.errors.delete(e):(this.formState.errors.set(e,i),this.formState.hasValidationErrors=!0),this.updateFormValidity(),this.updateLiveRegion()}updateFormValidity(){this.formState.valid=this.form.checkValidity(),this.formState.hasValidationErrors?this.form.setAttribute("aria-invalid","true"):this.form.removeAttribute("aria-invalid")}handleValidationErrors(){this.formState.hasValidationErrors=!0,this.formState.valid=!1;const e=Array.from(this.formState.errors.values());if(e.length>0){const t=`Form has ${e.length} validation error${e.length>1?"s":""}: ${e.join(". ")}`;this.announceToScreenReader(t,"error")}this.updateLiveRegion()}updateLiveRegion(){if(0===this.formState.errors.size)return void this.clearLiveRegion();const e=Array.from(this.formState.errors.values()).join(". ");this.liveRegion.textContent=e,this.liveRegion.setAttribute("data-type","error"),this.liveRegion.hidden=!1}clearLiveRegion(){this.liveRegion.textContent="",this.liveRegion.hidden=!0,this.liveRegion.removeAttribute("data-type")}announceToScreenReader(e,t="info"){this.liveRegion.textContent=e,this.liveRegion.setAttribute("data-type",t),this.liveRegion.hidden=!1,setTimeout(()=>{this.clearLiveRegion()},5e3)}get action(){return this.form.action}set action(e){this.form.action=e}get method(){return this.form.method}set method(e){this.form.method=e}get enctype(){return this.form.enctype}set enctype(e){this.form.enctype=e}get target(){return this.form.target}set target(e){this.form.target=e}get novalidate(){return this.form.hasAttribute("novalidate")}set novalidate(e){e?this.form.setAttribute("novalidate",""):this.form.removeAttribute("novalidate")}get autocomplete(){return this.form.autocomplete}set autocomplete(e){this.form.autocomplete=e}get ariaLabel(){const e=this.form.getAttribute("aria-label");return null===e?null:e}set ariaLabel(e){null==e?this.form.removeAttribute("aria-label"):this.form.setAttribute("aria-label",e)}get ariaDescribedBy(){const e=this.form.getAttribute("aria-describedby");return null===e?null:e}set ariaDescribedBy(e){null==e?this.form.removeAttribute("aria-describedby"):this.form.setAttribute("aria-describedby",e)}get ariaLabelledBy(){const e=this.form.getAttribute("aria-labelledby");return null===e?null:e}set ariaLabelledBy(e){null==e?this.form.removeAttribute("aria-labelledby"):this.form.setAttribute("aria-labelledby",e)}submit(){this.form.submit()}reset(){this.form.reset(),this.handleFormReset(new Event("reset"))}checkValidity(){return this.form.checkValidity()}reportValidity(){return this.form.reportValidity()}getFormData(){const e=new FormData;return this.querySelectorAll("input, select, textarea, ds-text-input, ds-select, ds-textarea, ds-checkbox, ds-radio").forEach(t=>{const i=t.name||t.getAttribute("name");if(!i)return;let a="";t.tagName&&t.tagName.toLowerCase().includes("ds-"),"checkbox"===t.type||"radio"===t.type?t.checked&&(a=t.value||"on"):a=t.value||"",""!==a&&e.append(i,a)}),e}getFormDataAsObject(){const e=this.getFormData(),t={};for(const[i,a]of e.entries())t[i]=a;return t}validateARIA(){const e=super.validateARIA?super.validateARIA():[],t=this.form.getAttribute("aria-label"),i=this.form.getAttribute("aria-labelledby"),a=this.querySelector("h1, h2, h3, h4, h5, h6");t||i||a||e.push("Form should have an accessible name (aria-label, aria-labelledby, or heading)");return this.querySelector('input, select, textarea, ds-text-input, ds-select, ds-textarea, ds-checkbox, ds-radio, button[type="submit"]')||e.push("Form should contain form controls"),e}}customElements.define("ds-form",p);exports.BaseComponent=e,exports.DsButton=s,exports.DsCheckbox=l,exports.DsCol=a,exports.DsFieldset=b,exports.DsForm=p,exports.DsLabel=c,exports.DsLegend=h,exports.DsOption=u,exports.DsPage=t,exports.DsRadio=n,exports.DsRow=i,exports.DsSelect=d,exports.DsTextInput=r,exports.DsTextarea=o,exports.VERSION="1.0.0";
//# sourceMappingURL=standards-ui.js.map
